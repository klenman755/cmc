V1 - Long normal version

program             block*

block               declaration
                    statement
                                       


declaration        type IDENTIFIER OPERATOR INTEGER_LITERAL ;                       NUMBER x = 1;
                   type IDENTIFIER ;                                                NUMBER x;
                   METHOD IDENTIFIER START_BRACKET declarationList END_BRACKET statements ENDMETHOD

type                NUMBER
                    BOO

statements          operations
                    evaluationBlock
		    methodCall     

operations          IDENTIFIER OPERATOR IDENTIFIER ;                                  x=y;
                    IDENTIFIER OPERATOR INTEGER_LITERAL ;                             x=1;
 		    IDENTIFIER OPERATOR BOO ;                                         x=true;
                    IDENTIFIER OPERATOR IDENTIFIER || INTEGER_LITERAL || Boo || methodCalls OPERATOR IDENTIFIER || INTEGER_LITERAL || Boo || methodCalls ; x=x+1 x=1+1+1 x=x+x+x x=x+1+x  
                    IDENTIFIER OPERATOR methodCalls ;                                 x=addSum(y,z);
 
methodCall         IDENTIFIER START_BRACKET parameterList END_BRACKET
                   
evaluationBlock     IF expression THEN statements   ENDIF
                    WHILE expression THEN statements ENDWHILE

parameterList       IDENTIFIER
                    IDENTIFIER, IDENTIFIER...
                    e

declarationList     type IDENTIFIER
                    type IDENTIFIER, type IDENTIFIER...
                    e

expression          IDENTIFIER OPERATOR IDENTIFIER
                    IDENTIFIER OPERATOR INTEGER_LITERAL 
	            IDENTIFIER OPERATOR TRUE
		    IDENTIFIER OPERATOR FALSE
		    IDENTIFIER OPERATOR methodCall
                    





V2 - Removed Left recursion; || and *


program             block

block               [ declarations || statements || methodCalls ] [ block ]*

declarations        type IDENTIFIER [ OPERATOR INTEGER_LITERAL ]*
                    METHOD IDENTIFIER START_BRACKET declarationList END_BRACKET statements ENDMETHOD

type                [ NUMBER || BOO ]

statements          [ operations || methodCalls ]

operations          IDENTIFIER OPERATOR [ [ IDENTIFIER [ OPERATOR [ IDENTIFIER || INTEGER_LITERAL ] ]* ] || INTEGER_LITERAL || methodCalls ]

methodCalls         IDENTIFIER START_BRACKET parameterList END_BRACKET
                    IF expression THEN statements ENDIF
                    WHILE expression THEN statements ENDWHILE

parameterList       IDENTIFIER [ , IDENTIFIER ]*
                    e

declarationList     type IDENTIFIER [ , type IDENTIFIER ]*
                    e

expression          IDENTIFIER OPERATOR [ IDENTIFIER || NTEGER_LITERAL || BOOLEAN ]